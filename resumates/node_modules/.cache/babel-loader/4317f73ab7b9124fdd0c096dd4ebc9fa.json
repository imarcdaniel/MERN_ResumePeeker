{"ast":null,"code":"var _jsxFileName = \"/Users/MacbookAir-January2015/Desktop/Resumates/MERN_ResumePeeker/resumates/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; // Add the Route named import\n\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport AuthPage from './pages/AuthPage/AuthPage';\nimport IndexPage from './pages/IndexPage/IndexPage';\nimport Navbar from './components/Navbar/Navbar';\nimport UploadForm from './components/UploadForm/UploadForm';\nimport Resume from './components/Resume/Resume';\nimport UploadPage from './pages/UploadPage/UploadPage';\nimport ProfilePage from './pages/ProfilePage/ProfilePage';\nimport LandingPage from './pages/LandingPage/LandingPage';\nimport FileUpload from \"./components/FileUpload/FileUpload\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      user: null\n    };\n\n    this.setUserInState = incomingUserData => {\n      this.setState({\n        user: incomingUserData\n      });\n    };\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem('token');\n\n    if (token) {\n      const payload = JSON.parse(atob(token.split('.')[1])); // decode token\n\n      if (payload.exp < Date.now() / 1000) {\n        // Check if our token is expired, and remove if it is (standard/boilerplate)\n        localStorage.removeItem('token');\n        token = null;\n      } else {\n        // token not expired! our user is still 'logged in'. Put them into state.\n        let userDoc = payload.user; // grab user details from token\n\n        this.setState({\n          user: userDoc\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), this.state.user ? /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/index\",\n          element: /*#__PURE__*/_jsxDEV(IndexPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/index\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/LandingPage\",\n          element: /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Upload\",\n          element: /*#__PURE__*/_jsxDEV(UploadPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Profile\",\n          element: /*#__PURE__*/_jsxDEV(ProfilePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(AuthPage, {\n        setUserInState: this.setUserInState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/MacbookAir-January2015/Desktop/Resumates/MERN_ResumePeeker/resumates/src/App.js"],"names":["React","Component","BrowserRouter","Routes","Route","Navigate","AuthPage","IndexPage","Navbar","UploadForm","Resume","UploadPage","ProfilePage","LandingPage","FileUpload","Link","App","state","user","setUserInState","incomingUserData","setState","componentDidMount","token","localStorage","getItem","payload","JSON","parse","atob","split","exp","Date","now","removeItem","userDoc","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n// Add the Route named import\nimport {BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport AuthPage from './pages/AuthPage/AuthPage'\nimport IndexPage from './pages/IndexPage/IndexPage';\nimport Navbar from './components/Navbar/Navbar';\nimport UploadForm from './components/UploadForm/UploadForm';\nimport Resume from './components/Resume/Resume';\nimport UploadPage from './pages/UploadPage/UploadPage';\nimport ProfilePage from './pages/ProfilePage/ProfilePage';\nimport LandingPage from './pages/LandingPage/LandingPage';\nimport FileUpload from \"./components/FileUpload/FileUpload\";\nimport { Link } from 'react-router-dom'\n\nclass App extends Component {\n  state = {\n    user: null,\n  }\n\n  // a method to update user\n  setUserInState = (incomingUserData) => {\n    this.setState({ user: incomingUserData})\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem('token')\n    if (token) {\n      const payload = JSON.parse(atob(token.split('.')[1])); // decode token\n      if (payload.exp < Date.now() / 1000) {  // Check if our token is expired, and remove if it is (standard/boilerplate)\n        localStorage.removeItem('token');\n        token = null;\n      } else { // token not expired! our user is still 'logged in'. Put them into state.\n        let userDoc = payload.user // grab user details from token\n        this.setState({user: userDoc})      \n      }\n    }\n  }\n\n  render() {\n    return (\n      <main className=\"App\">\n        <Navbar />\n        {/* this ternary operator asks: is there a user in state? */}\n        {/* if yes, they can see our pages: neworder, etc. */}\n        {/* if no(user is null), show them only the <AuthPage> */}\n        {this.state.user ? (\n          <Routes>\n            <Route path=\"/index\" element={<IndexPage />} />\n            <Navigate to=\"/index\" />\n            <Route path=\"/LandingPage\" element={<LandingPage />} />\n          <Route path=\"/Upload\" element={<UploadPage />} />\n          <Route path=\"/Profile\" element={<ProfilePage />} />\n          </Routes>\n        ) : (\n          <AuthPage setUserInState={this.setUserInState} />\n        )}\n      </main>\n    );\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}