{"ast":null,"code":"var _jsxFileName = \"/Users/MacbookAir-January2015/Desktop/Resumates/MERN_ResumePeeker/resumates/src/components/FileUpload/FileUpload.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class FileUpload extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: true,\n      uploading: false,\n      images: []\n    };\n\n    this.onChange = e => {\n      const errs = [];\n      const files = Array.from(e.target.files);\n      const formData = new FormData();\n      const types = ['image/png', 'image/jpeg', 'image/gif'];\n      files.forEach((file, i) => {\n        if (types.every(type => file.type !== type)) {\n          errs.push(`'${file.type}' is not a supported format`);\n        }\n\n        if (file.size > 150000) {\n          errs.push(`'${file.name}' is too large, please pick a smaller file`);\n        }\n\n        formData.append(\"file\", file);\n      });\n\n      if (errs.length) {\n        return errs.forEach(err => console.log(err));\n      }\n\n      this.setState({\n        uploading: true\n      });\n      fetch(\"api/images/put\", {\n        method: 'POST',\n        body: formData\n      }).then(res => {\n        if (!res.ok) {\n          throw res;\n        }\n\n        return res.json();\n      }).then(images => {\n        this.setState({\n          uploading: false,\n          images\n        });\n      }).catch(err => {\n        err.json().then(e => {\n          console.log(e);\n          this.setState({\n            uploading: false\n          });\n        });\n      });\n    };\n\n    this.filter = id => {\n      return this.state.images.filter(image => image.public_id !== id);\n    };\n\n    this.removeImage = id => {\n      this.setState({\n        images: this.filter(id)\n      });\n    };\n\n    this.onError = id => {\n      console.log('Oops, something went wrong on Filter');\n      this.setState({\n        images: this.filter(id)\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"api/images/get\").then(res => {\n      if (res.ok) {\n        return this.setState({\n          loading: false\n        });\n      }\n\n      console.log(\"Something went wrong on  componentDidMount\");\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons fadein\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"single\",\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/MacbookAir-January2015/Desktop/Resumates/MERN_ResumePeeker/resumates/src/components/FileUpload/FileUpload.jsx"],"names":["React","Component","FileUpload","state","loading","uploading","images","onChange","e","errs","files","Array","from","target","formData","FormData","types","forEach","file","i","every","type","push","size","name","append","length","err","console","log","setState","fetch","method","body","then","res","ok","json","catch","filter","id","image","public_id","removeImage","onError","componentDidMount","render"],"mappings":"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","sourcesContent":["\n\nimport React, { Component } from 'react'\n\n\n\n\n\nexport default class FileUpload extends Component {\n  \n  state = {\n    loading: true,\n    uploading: false,\n    images: []\n  }\n\n  componentDidMount() {\n    fetch(\"api/images/get\")\n      .then(res => {\n        if (res.ok) {\n          return this.setState({ loading: false })  \n        }\n        console.log(\"Something went wrong on  componentDidMount\"); \n        \n      })\n  }\n\n\n\n  onChange = e => {\n    const errs = [] \n    const files = Array.from(e.target.files)\n\n    const formData = new FormData()\n    const types = ['image/png', 'image/jpeg', 'image/gif']\n\n    files.forEach((file, i) => {\n\n      if (types.every(type => file.type !== type)) {\n        errs.push(`'${file.type}' is not a supported format`)\n      }\n\n      if (file.size > 150000) {\n        errs.push(`'${file.name}' is too large, please pick a smaller file`)\n      }\n\n      formData.append(\"file\", file)\n    })\n\n    if (errs.length) {\n      return errs.forEach((err) =>\n        console.log(err)\n      );\n    }\n\n    this.setState({ uploading: true })\n\n    fetch(\"api/images/put\", {\n      method: 'POST',\n      body: formData\n    })\n    .then(res => {\n      if (!res.ok) {\n        throw res\n      }\n      return res.json()\n    })\n    .then(images => {\n      this.setState({\n        uploading: false, \n        images\n      })\n    })\n    .catch(err => {\n      err.json().then(e => {\n        console.log(e)\n        this.setState({ uploading: false })\n      })\n    })\n  }\n\n  filter = id => {\n    return this.state.images.filter(image => image.public_id !== id)\n  }\n\n  removeImage = id => {\n    this.setState({ images: this.filter(id) })\n  }\n\n  onError = id => {\n    console.log('Oops, something went wrong on Filter')\n    this.setState({ images: this.filter(id) })\n  }\n  \n  render() {\n\n\n    return (\n      <div className=\"buttons fadein\">\n    <div className=\"button\">\n      \n      <input type=\"file\" id=\"single\" onChange={this.onChange} />\n    </div>\n  </div>\n    )\n  }\n}\n\n\n  \n"]},"metadata":{},"sourceType":"module"}