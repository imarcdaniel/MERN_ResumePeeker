{"ast":null,"code":"var _jsxFileName = \"/home/ericmbc/GA/Resumates/MERN_ResumePeeker/resumates/src/components/CommentForm/CommentForm.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nhandleSubmit = async () => {\n  evt.preventDefault();\n  let body = {\n    text: this.state.text\n  };\n  let options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  };\n  await fetch(\"/api/comments\", options).then(res => res.json()).then(data => {\n    console.log(\"Success:\", data);\n  }).catch(error => {\n    console.error(\"Error:\", error);\n  });\n};\n\nconst CommentForm = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleSubmit(postId, {\n          text\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"text\",\n        cols: \"30\",\n        rows: \"2\",\n        placeholder: \"Comment\" //      value={text}\n        //      onChange={(e) => setText(e.target.value)}\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c = CommentForm;\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/home/ericmbc/GA/Resumates/MERN_ResumePeeker/resumates/src/components/CommentForm/CommentForm.jsx"],"names":["React","Link","useLocation","handleSubmit","evt","preventDefault","body","text","state","options","method","headers","JSON","stringify","fetch","then","res","json","data","console","log","catch","error","CommentForm","e","postId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;;AAEAC,YAAY,GAAG,YAAY;AACvBC,EAAAA,GAAG,CAACC,cAAJ;AACA,MAAIC,IAAI,GAAG;AACTC,IAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD;AADR,GAAX;AAGA,MAAIE,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,MADI;AAEZC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFG;AAKZL,IAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeP,IAAf;AALM,GAAd;AAOA,QAAMQ,KAAK,CAAC,eAAD,EAAkBL,OAAlB,CAAL,CACDM,IADC,CACIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADX,EAEDF,IAFC,CAEIG,IAAI,IAAI;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,IAAxB;AAA8B,GAF3C,EAGDG,KAHC,CAGKC,KAAK,IAAI;AAACH,IAAAA,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AAA+B,GAH9C,CAAN;AAID,CAhBH;;AAkBA,MAAMC,WAAW,GAAG,MAAM;AACtB,sBACI;AAAA,2BACA;AACA,MAAA,QAAQ,EAAGC,CAAD,IAAO;AACbA,QAAAA,CAAC,CAACnB,cAAF;AACAF,QAAAA,YAAY,CAACsB,MAAD,EAAS;AAAElB,UAAAA;AAAF,SAAT,CAAZ;AACD,OAJH;AAAA,8BAMI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,IAFT;AAGI,QAAA,IAAI,EAAC,GAHT;AAII,QAAA,WAAW,EAAC,SAJhB,CAKJ;AACA;AANI;AAOI,QAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA,cANJ,eAeI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAqBH,CAtBD;;KAAMgB,W;AAwBN,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useLocation } from 'react-router-dom'\n\nhandleSubmit = async () => {\n    evt.preventDefault()\n    let body = { \n      text: this.state.text, \n    }\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"/api/comments\", options)\n        .then(res => res.json())\n        .then(data => {console.log(\"Success:\", data)})\n        .catch(error => {console.error(\"Error:\", error)})\n  }\n\nconst CommentForm = () => {\n    return (\n        <>\n        <form\n        onSubmit={(e) => {\n            e.preventDefault();\n            handleSubmit(postId, { text });\n          }}\n        >\n            <textarea\n                name=\"text\"\n                cols=\"30\"\n                rows=\"2\"\n                placeholder=\"Comment\"\n        //      value={text}\n        //      onChange={(e) => setText(e.target.value)}\n                required\n            ></textarea>\n            <input type=\"submit\" value=\"Submit\"/>\n      </form>\n        </> \n      );  \n}\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}