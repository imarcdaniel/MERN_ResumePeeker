{"ast":null,"code":"var _jsxFileName = \"/Users/MacbookAir-January2015/Desktop/Resumates/MERN_ResumePeeker/resumates/src/components/SignUpForm/SignUpForm.jsx\";\nimport { Component } from 'react';\nimport './SignUpForm.css';\nimport { TextField, Box } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SignUpForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirm: '',\n      error: ''\n    };\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value,\n        error: ''\n      });\n    };\n\n    this.handleSubmit = async evt => {\n      evt.preventDefault();\n\n      try {\n        const fetchResponse = await fetch('/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password\n          })\n        }); // 2. Check \"fetchResponse.ok\". False means status code was 4xx from the server/controller action\n\n        if (!fetchResponse.ok) throw new Error('Fetch failed - Bad request'); // decoding our response into js {} and [] format\n\n        let token = await fetchResponse.json(); // we are saving the token inside the user's browser-- localStorg\n\n        localStorage.setItem('token', token); // decoding the JWT payload to pull out the user {}\n\n        const userDoc = JSON.parse(atob(token.split('.')[1])).user;\n        this.props.setUserInState(userDoc);\n      } catch (err) {\n        console.log(\"SignupForm error\", err);\n        this.setState({\n          error: 'Sign Up Failed - Try Again'\n        });\n      }\n    };\n  }\n\n  render() {\n    const disable = this.state.password !== this.state.confirm;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          autoComplete: \"off\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: this.state.name,\n              placeholder: \"Name\",\n              onChange: this.handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: this.state.email,\n              placeholder: \"Email\",\n              onChange: this.handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: this.state.password,\n              placeholder: \"Password\",\n              onChange: this.handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"confirm\",\n              value: this.state.confirm,\n              placeholder: \"Confirm Password\",\n              onChange: this.handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: disable,\n              children: \"Create Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: [\"\\xA0\", this.state.error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          '& > :not(style)': {\n            m: 1,\n            width: '25ch'\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Outlined\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-basic\",\n          label: \"Filled\",\n          variant: \"filled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          label: \"Standard\",\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/MacbookAir-January2015/Desktop/Resumates/MERN_ResumePeeker/resumates/src/components/SignUpForm/SignUpForm.jsx"],"names":["Component","TextField","Box","Button","SignUpForm","state","name","email","password","confirm","error","handleChange","evt","setState","target","value","handleSubmit","preventDefault","fetchResponse","fetch","method","headers","body","JSON","stringify","ok","Error","token","json","localStorage","setItem","userDoc","parse","atob","split","user","props","setUserInState","err","console","log","render","disable","m","width"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport './SignUpForm.css'\nimport { TextField, Box } from \"@material-ui/core\"; \nimport { Button } from \"@material-ui/core\"; \n\nexport default class SignUpForm extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    confirm: '',\n    error: ''\n  };\n\n  handleChange = (evt) => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n      error: ''\n    });\n  };\n\n  handleSubmit = async (evt) => {\n    evt.preventDefault();\n    try {\n      \n      const fetchResponse = await fetch('/api/users/signup', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          name: this.state.name,\n          email: this.state.email,\n          password: this.state.password,\n        })\n      })\n      // 2. Check \"fetchResponse.ok\". False means status code was 4xx from the server/controller action\n      if (!fetchResponse.ok) throw new Error('Fetch failed - Bad request')\n\n      // decoding our response into js {} and [] format\n      let token = await fetchResponse.json();\n\n      // we are saving the token inside the user's browser-- localStorg\n      localStorage.setItem('token', token)\n\n      // decoding the JWT payload to pull out the user {}\n      const userDoc = JSON.parse(atob(token.split('.')[1])).user;\n\n      this.props.setUserInState(userDoc)\n\n\n    } catch (err) {\n      console.log(\"SignupForm error\", err)\n      this.setState({ error: 'Sign Up Failed - Try Again' });\n    }\n  }\n\n  render() {\n    const disable = this.state.password !== this.state.confirm;\n    return (\n      <div>\n        <div className=\"form-container\">\n          <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\n            <label>\n              <input type=\"text\" name=\"name\" value={this.state.name} placeholder=\"Name\" onChange={this.handleChange} required />\n            </label>\n            <label>\n              <input type=\"email\" name=\"email\" value={this.state.email} placeholder=\"Email\" onChange={this.handleChange} required />\n            </label>\n            <label>\n              <input type=\"password\" name=\"password\" value={this.state.password} placeholder=\"Password\" onChange={this.handleChange} required />\n            </label>\n            \n            <label>\n              <input type=\"password\" name=\"confirm\" value={this.state.confirm} placeholder=\"Confirm Password\" onChange={this.handleChange} required />\n            </label>\n            <label>\n              <button type=\"submit\" disabled={disable}>Create Account</button>\n            </label>\n          </form>\n        </div>\n        <p className=\"error-message\">&nbsp;{this.state.error}</p>\n\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\n      <TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />\n      <TextField id=\"standard-basic\" label=\"Standard\" variant=\"standard\" />\n    </Box>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}