{"ast":null,"code":"var _jsxFileName = \"/home/ericmbc/GA/Resumates/MERN_ResumePeeker/resumates/src/components/CommentForm/CommentForm.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = () => {\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let body = {\n      text: this.state.text\n    };\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    await fetch(\"/api/comments\", options).then(res => res.json()).then(data => {\n      console.log(\"Success:\", data);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleSubmit();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"text\",\n      cols: \"30\",\n      rows: \"2\",\n      placeholder: \"Comment\" //      value={text}\n      //      onChange={(e) => setText(e.target.value)}\n      ,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CommentForm;\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/home/ericmbc/GA/Resumates/MERN_ResumePeeker/resumates/src/components/CommentForm/CommentForm.jsx"],"names":["React","Link","useLocation","CommentForm","handleSubmit","e","preventDefault","body","text","state","options","method","headers","JSON","stringify","fetch","then","res","json","data","console","log","catch","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,IAAI,GAAG;AACTC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD;AADR,KAAX;AAGA,QAAIE,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,MADI;AAEZC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFG;AAKZL,MAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeP,IAAf;AALM,KAAd;AAOA,UAAMQ,KAAK,CAAC,eAAD,EAAkBL,OAAlB,CAAL,CACDM,IADC,CACIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADX,EAEDF,IAFC,CAEIG,IAAI,IAAI;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,IAAxB;AAA8B,KAF3C,EAGDG,KAHC,CAGKC,KAAK,IAAI;AAACH,MAAAA,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AAA+B,KAH9C,CAAN;AAID,GAhBH;;AAiBA,sBACI;AACA,IAAA,QAAQ,EAAGlB,CAAD,IAAO;AACbA,MAAAA,CAAC,CAACC,cAAF;AACAF,MAAAA,YAAY;AACf,KAJD;AAAA,4BAMI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,IAFT;AAGI,MAAA,IAAI,EAAC,GAHT;AAII,MAAA,WAAW,EAAC,SAJhB,CAKJ;AACA;AANI;AAOI,MAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA,YANJ,eAeI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CArCD;;KAAMD,W;AAuCN,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useLocation } from 'react-router-dom'\n\nconst CommentForm = () => {\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        let body = { \n          text: this.state.text, \n        }\n        let options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        };\n        await fetch(\"/api/comments\", options)\n            .then(res => res.json())\n            .then(data => {console.log(\"Success:\", data)})\n            .catch(error => {console.error(\"Error:\", error)})\n      }\n    return (\n        <form\n        onSubmit={(e) => {\n            e.preventDefault();\n            handleSubmit();\n        }}\n        >\n            <textarea\n                name=\"text\"\n                cols=\"30\"\n                rows=\"2\"\n                placeholder=\"Comment\"\n        //      value={text}\n        //      onChange={(e) => setText(e.target.value)}\n                required\n            ></textarea>\n            <input type=\"submit\" value=\"Submit\"/>\n      </form> \n      );  \n}\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}