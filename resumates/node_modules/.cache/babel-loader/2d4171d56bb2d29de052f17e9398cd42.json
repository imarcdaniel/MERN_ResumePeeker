{"ast":null,"code":"var _jsxFileName = \"/Users/MacbookAir-January2015/Desktop/Resumates/MERN_ResumePeeker/resumates/src/components/LoginForm/LoginForm.jsx\";\nimport { Component } from 'react';\nimport './LoginForm.css';\nimport { TextField, Box, FormControl } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SignUpForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      email: '',\n      password: '',\n      error: ''\n    };\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value,\n        error: ''\n      });\n    };\n\n    this.handleSubmit = async evt => {\n      evt.preventDefault();\n\n      try {\n        // 1. POST our new user info to the server\n        const fetchResponse = await fetch('/api/users/login', {\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: this.state.email,\n            password: this.state.password\n          })\n        }); // 2. Check \"fetchResponse.ok\". False means status code was 4xx from the server/controller action\n\n        if (!fetchResponse.ok) throw new Error('Fetch failed - Bad request');\n        let token = await fetchResponse.json(); // 3. decode fetch response: get jwt token from srv\n\n        localStorage.setItem('token', token); // 4. Stick token into localStorage\n\n        const userDoc = JSON.parse(atob(token.split('.')[1])).user; // 5. Decode the token + put user document into state\n\n        this.props.setUserInState(userDoc);\n      } catch (err) {\n        console.log(\"SignupForm error\", err);\n        this.setState({\n          error: 'Sign Up Failed - Try Again'\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          '& > :not(style)': {\n            m: 1,\n            width: '25ch'\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"Box\",\n        sx: {\n          maxWidth: 300\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            variant: \"outlined\",\n            type: \"email\",\n            name: \"email\",\n            value: this.state.email,\n            placeholder: \"Email\",\n            onChange: this.handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"Box\",\n        sx: {\n          maxWidth: 300\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            variant: \"outlined\",\n            type: \"password\",\n            name: \"password\",\n            value: this.state.password,\n            placeholder: \"Password\",\n            onChange: this.handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          id: \"ButtonTwo\",\n          variant: \"contained\",\n          type: \"submit\",\n          disabled: disable,\n          onClick: this.handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            id: \"link\",\n            className: \"link\",\n            to: \"/index\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: [\"\\xA0\", this.state.error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/MacbookAir-January2015/Desktop/Resumates/MERN_ResumePeeker/resumates/src/components/LoginForm/LoginForm.jsx"],"names":["Component","TextField","Box","FormControl","Button","Link","SignUpForm","state","email","password","error","handleChange","evt","setState","target","name","value","handleSubmit","preventDefault","fetchResponse","fetch","method","headers","body","JSON","stringify","ok","Error","token","json","localStorage","setItem","userDoc","parse","atob","split","user","props","setUserInState","err","console","log","render","m","width","maxWidth","disable"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport './LoginForm.css'\nimport { TextField, Box, FormControl } from \"@material-ui/core\"; \nimport { Button } from \"@material-ui/core\"; \nimport { Link } from 'react-router-dom'\n\nexport default class SignUpForm extends Component {\n  state = {\n    email: '',\n    password: '',\n    error: ''\n  };\n\n  handleChange = (evt) => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n      error: ''\n    });\n  };\n\n  handleSubmit = async (evt) => {\n    evt.preventDefault();\n    try {\n\n      // 1. POST our new user info to the server\n      const fetchResponse = await fetch('/api/users/login', {\n        method: 'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email: this.state.email, password: this.state.password, })\n      })\n\n      // 2. Check \"fetchResponse.ok\". False means status code was 4xx from the server/controller action\n      if (!fetchResponse.ok) throw new Error('Fetch failed - Bad request')\n\n      let token = await fetchResponse.json() // 3. decode fetch response: get jwt token from srv\n      localStorage.setItem('token', token);  // 4. Stick token into localStorage\n\n      const userDoc = JSON.parse(atob(token.split('.')[1])).user; // 5. Decode the token + put user document into state\n      this.props.setUserInState(userDoc)\n\n    } catch (err) {\n      console.log(\"SignupForm error\", err)\n      this.setState({ error: 'Sign Up Failed - Try Again' });\n    }\n  }\n\n  render() {\n    return (\n    <div>\n    <Box component=\"form\" sx={{'& > :not(style)': { m: 1, width: '25ch' },}} noValidate autoComplete=\"off\"> </Box>\n      <Box className='Box' sx={{ maxWidth: 300 }}>\n        <FormControl fullWidth>\n          <TextField label=\"Email\" variant=\"outlined\" type=\"email\" name=\"email\" value={this.state.email} placeholder=\"Email\" onChange={this.handleChange} required/>\n        </FormControl>\n      </Box>\n      <Box className='Box' sx={{ maxWidth: 300 }}>\n        <FormControl fullWidth>\n          <TextField label=\"Password\" variant=\"outlined\" type=\"password\" name=\"password\" value={this.state.password} placeholder=\"Password\" onChange={this.handleChange} required/>\n        </FormControl>\n      </Box>\n      <br/>\n      <div>\n        <Button id='ButtonTwo' variant=\"contained\" type=\"submit\" disabled={disable} onClick={this.handleSubmit}>\n          <Link id='link' className='link' to='/index'>Login</Link>\n        </Button> \n        <p className=\"error-message\">&nbsp;{this.state.error}</p>\n       </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}