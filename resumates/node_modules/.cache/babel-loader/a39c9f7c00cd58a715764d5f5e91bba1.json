{"ast":null,"code":"var _jsxFileName = \"/home/ericmbc/GA/Resumates/MERN_ResumePeeker/resumates/src/components/LoginForm/LoginForm.jsx\";\nimport { Component } from 'react';\nimport './LoginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SignUpForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      email: '',\n      password: '',\n      error: ''\n    };\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value,\n        error: ''\n      });\n    };\n\n    this.handleSubmit = async evt => {\n      evt.preventDefault();\n\n      try {\n        // 1. POST our new user info to the server\n        const fetchResponse = await fetch('/api/users/login', {\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: this.state.email,\n            password: this.state.password\n          })\n        }); // 2. Check \"fetchResponse.ok\". False means status code was 4xx from the server/controller action\n\n        if (!fetchResponse.ok) throw new Error('Fetch failed - Bad request');\n        let token = await fetchResponse.json(); // 3. decode fetch response: get jwt token from srv\n\n        localStorage.setItem('token', token); // 4. Stick token into localStorage\n\n        const userDoc = JSON.parse(atob(token.split('.')[1])).user; // 5. Decode the token + put user document into state\n\n        this.props.setUserInState(userDoc);\n      } catch (err) {\n        console.log(\"SignupForm error\", err);\n        this.setState({\n          error: 'Sign Up Failed - Try Again'\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              value: this.state.email,\n              placeholder: \"Email\",\n              onChange: this.handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: this.state.password,\n              placeholder: \"password\",\n              onChange: this.handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"LOG IN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: [\"\\xA0\", this.state.error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ericmbc/GA/Resumates/MERN_ResumePeeker/resumates/src/components/LoginForm/LoginForm.jsx"],"names":["Component","SignUpForm","state","email","password","error","handleChange","evt","setState","target","name","value","handleSubmit","preventDefault","fetchResponse","fetch","method","headers","body","JSON","stringify","ok","Error","token","json","localStorage","setItem","userDoc","parse","atob","split","user","props","setUserInState","err","console","log","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,iBAAP;;AAEA,eAAe,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAChDE,KADgD,GACxC;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,KAAK,EAAE;AAHD,KADwC;;AAAA,SAOhDC,YAPgD,GAOhCC,GAAD,IAAS;AACtB,WAAKC,QAAL,CAAc;AACZ,SAACD,GAAG,CAACE,MAAJ,CAAWC,IAAZ,GAAmBH,GAAG,CAACE,MAAJ,CAAWE,KADlB;AAEZN,QAAAA,KAAK,EAAE;AAFK,OAAd;AAID,KAZ+C;;AAAA,SAchDO,YAdgD,GAcjC,MAAOL,GAAP,IAAe;AAC5BA,MAAAA,GAAG,CAACM,cAAJ;;AACA,UAAI;AAEF;AACA,cAAMC,aAAa,GAAG,MAAMC,KAAK,CAAC,kBAAD,EAAqB;AACpDC,UAAAA,MAAM,EAAE,MAD4C;AAEpDC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB,WAF2C;AAGpDC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEjB,YAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAApB;AAA2BC,YAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAAhD,WAAf;AAH8C,SAArB,CAAjC,CAHE,CASF;;AACA,YAAI,CAACU,aAAa,CAACO,EAAnB,EAAuB,MAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AAEvB,YAAIC,KAAK,GAAG,MAAMT,aAAa,CAACU,IAAd,EAAlB,CAZE,CAYqC;;AACvCC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B,EAbE,CAaqC;;AAEvC,cAAMI,OAAO,GAAGR,IAAI,CAACS,KAAL,CAAWC,IAAI,CAACN,KAAK,CAACO,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAD,CAAf,EAAsCC,IAAtD,CAfE,CAe0D;;AAC5D,aAAKC,KAAL,CAAWC,cAAX,CAA0BN,OAA1B;AAED,OAlBD,CAkBE,OAAOO,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,GAAhC;AACA,aAAK1B,QAAL,CAAc;AAAEH,UAAAA,KAAK,EAAE;AAAT,SAAd;AACD;AACF,KAtC+C;AAAA;;AAwChDgC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,QAAQ,EAAE,KAAKzB,YAA/C;AAAA,+BACE;AAAM,UAAA,YAAY,EAAC,KAAnB;AAAA,kCACE;AAAA,mCACE;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,IAAI,EAAC,OAAxB;AAAgC,cAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,KAAlD;AAAyD,cAAA,WAAW,EAAC,OAArE;AAA6E,cAAA,QAAQ,EAAE,KAAKG,YAA5F;AAA0G,cAAA,QAAQ;AAAlH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,mCACE;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,IAAI,EAAC,UAA5B;AAAuC,cAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,QAAzD;AAAmE,cAAA,WAAW,EAAC,UAA/E;AAA0F,cAAA,QAAQ,EAAE,KAAKE,YAAzG;AAAuH,cAAA,QAAQ;AAA/H;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAA,mCACE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA,2BAAoC,KAAKJ,KAAL,CAAWG,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AA3D+C","sourcesContent":["import { Component } from 'react';\nimport './LoginForm.css'\n\nexport default class SignUpForm extends Component {\n  state = {\n    email: '',\n    password: '',\n    error: ''\n  };\n\n  handleChange = (evt) => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n      error: ''\n    });\n  };\n\n  handleSubmit = async (evt) => {\n    evt.preventDefault();\n    try {\n\n      // 1. POST our new user info to the server\n      const fetchResponse = await fetch('/api/users/login', {\n        method: 'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email: this.state.email, password: this.state.password, })\n      })\n\n      // 2. Check \"fetchResponse.ok\". False means status code was 4xx from the server/controller action\n      if (!fetchResponse.ok) throw new Error('Fetch failed - Bad request')\n\n      let token = await fetchResponse.json() // 3. decode fetch response: get jwt token from srv\n      localStorage.setItem('token', token);  // 4. Stick token into localStorage\n\n      const userDoc = JSON.parse(atob(token.split('.')[1])).user; // 5. Decode the token + put user document into state\n      this.props.setUserInState(userDoc)\n\n    } catch (err) {\n      console.log(\"SignupForm error\", err)\n      this.setState({ error: 'Sign Up Failed - Try Again' });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"form-container\" onSubmit={this.handleSubmit}>\n          <form autoComplete=\"off\" >\n            <label>\n              <input type=\"text\" name=\"email\" value={this.state.email} placeholder=\"Email\" onChange={this.handleChange} required />\n            </label>\n            <label>\n              <input type=\"password\" name=\"password\" value={this.state.password} placeholder=\"password\" onChange={this.handleChange} required />\n            </label>\n            <label>\n              <button type=\"submit\">LOG IN</button>\n            </label>\n          </form>\n        </div>\n        <p className=\"error-message\">&nbsp;{this.state.error}</p>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}